name: Default pipeline
on:
  workflow_call:
    inputs:
      ecr_registry:
        required: true
        type: string
      account_id:
        required: true
        type: string
      ecr_repository:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      bundle_without:
        required: false
        type: string
    secrets:
      aws_access_key_id:
          required: true
      aws_secret_access_key:
          required: true
      bundle_token:
          required: false
    outputs:
      tag:
        description: 'Tag version'
        value: ${{ jobs.build_and_push.outputs.tag }}
jobs:
  build_and_push:
    name: Pass input and secrets to my-action
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.get_tag_version.outputs.new_tag }}
    env:
      ENV: dev
      ECR_REGISTRY: ${{ inputs.ecr_registry }}
      ACCOUNT_ID: ${{ inputs.account_id }}
      ECR_REPOSITORY: ${{ inputs.ecr_repository }}
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      AWS_REGION: ${{ inputs.aws_region }}
      BUNDLE_RUBYGEMS__PKG__GITHUB__COM: ${{ secrets.bundle_token }}
      BUNDLE_WITHOUT: ${{ inputs.bundle_without }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dry run for getting a version
        id: get_tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          release_branches: main,develop
          tag_prefix: ""
      - name: Login to Amazon ECR
        id: login-ecr
        with:
          registries: "${{ env.ACCOUNT_ID }}"
        uses: aws-actions/amazon-ecr-login@v1
      - name: build
        run: |
          docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get_tag_version.outputs.new_tag }}" --build-arg  ENV=$ENV --build-arg BUNDLE_RUBYGEMS__PKG__GITHUB__COM=$BUNDLE_RUBYGEMS__PKG__GITHUB__COM --build-arg BUNDLE_WITHOUT=$BUNDLE_WITHOUT -f Dockerfile .
        env:
          BUNDLE_RUBYGEMS__PKG__GITHUB__COM: ${{ env.BUNDLE_RUBYGEMS__PKG__GITHUB__COM }}
      - name: push image
        run: docker push "$ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get_tag_version.outputs.new_tag }}"
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main,develop
          tag_prefix: ""
